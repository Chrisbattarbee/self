types:
  definitions:
    default-package: com.chrisbattarbee.self.calories
    objects:

      FoodEntry:
        fields:
          name: string
          calories: double
          carbohydrates: double
          fat: double
          protein: double
          sodium: double
          sugar: double
          quantity: double
          unit: string

      Meal:
        fields:
          entries: list<FoodEntry>
          name: string

      MealsForDay:
        fields:
          meals: list<Meal>
          date: string

      MacroGoals:
        fields:
          date: string
          calories: double
          carbohydrates: double
          fat: double
          protein: double
          sodium: double
          sugar: double

      Set:
        package: com.chrisbattarbee.self.workouts
        fields:
          index: integer
          weight: double
          reps: integer

      Exercise:
        package: com.chrisbattarbee.self.workouts
        fields:
          name: string
          oneRepMax: double
          type: string
          sets: list<Set>

      Workout:
        package: com.chrisbattarbee.self.workouts
        fields:
          exercises: list<Exercise>
          sessionLength: integer
          actualWorkoutLength: integer
          wastedTime: integer
          restTimer: integer
          totalWeightLifted: integer
          date: string

      HealthDataPoint:
        package: com.chrisbattarbee.self.workouts
        fields:
          name: string
          unit: string
          date: string
          amount: double

      PostHealthData:
        package: com.chrisbattarbee.self.workouts
        fields:
          data: HealthDataInner

      HealthDataInner:
        package: com.chrisbattarbee.self.workouts
        fields:
          metrics: list<HealthMetric>
          workouts: list<NullObject>

      HealthMetric:
        package: com.chrisbattarbee.self.workouts
        fields:
          data: list<HealthMetricInner>

      HealthMetricInner:
        package: com.chrisbattarbee.self.workouts
        fields:
          qty: double
          date: string

      # Used to stub objects where we know nothing will be reported in actuality
      NullObject:
        package: com.chrisbattarbee.self.workouts
        fields:
          nullField: string

    errors:
      Internal:
        namespace: Calories
        code: INTERNAL
      NotFound:
        namespace: Calories
        code: NOT_FOUND
        safe-args:
          date: string

services:
  WorkoutService:
    name: Workout Tracking Service
    package: com.chrisbattarbee.self.workouts
    base-path: /workouts
    docs: |
      API for retrieving and adding workout information.

    endpoints:
      updateDailyWorkout:
        http: PUT /workout
        args:
          updateDayRequest:
            param-type: body
            type: Workout
      getDailyWorkout:
        http: GET /workout/{date}
        args:
          date:
            type: string
        returns: Workout
      getWorkoutsInRange:
        docs: Returns the between startDate (inclusive) and endDate (inclusive).
        http: GET /workout/{startDate}/{endDate}
        args:
          startDate:
            type: string
          endDate:
            type: string
        returns: list<Workout>


  CalorieService:
    name: Calorie Tracking Service
    package: com.chrisbattarbee.self.calories
    base-path: /calories
    docs: |
      API for retrieving and adding calorie information.

    endpoints:
      updateDailyCalories:
        http: PUT /calories
        args:
          updateDayRequest:
            param-type: body
            type: MealsForDay
      getDailyCalories:
        http: GET /calories/{date}
        args:
          date:
            type: string
        returns: MealsForDay
      getDailyCaloriesInRange:
        http: GET /calories/{startDate}/{endDate}
        args:
          startDate:
            type: string
          endDate:
            type: string
        returns: list<MealsForDay>
      updateDailyMacroGoals:
        http: PUT /macrogoals
        args:
          updateMacroGoalsRequest:
            param-type: body
            type: MacroGoals
      getDailyMacroGoals:
        http: GET /macrogoals/{date}
        args:
          date:
            type: string
        returns: MacroGoals
      getDailyMacroGoalsInRange:
        http: GET /macrogoals/{startDate}/{endDate}
        args:
          startDate:
            type: string
          endDate:
            type: string
        returns: list<MacroGoals>


  HealthService:
    name: Apple Health Tracking Service
    package: com.chrisbattarbee.self.health
    base-path: /health
    docs: |
      API for retrieving and adding apple health information.

    endpoints:
      putHealthData:
        http: POST /update
        args:
          data: PostHealthData

      getHealthDataInRange:
        http: GET /{metricName}/{startDate}/{endDate}
        args:
          metricName:
            type: string
          startDate:
            type: string
          endDate:
            type: string
        returns: list<HealthDataPoint>